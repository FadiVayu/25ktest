{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"APIInvoice": {
				"properties": {
					"id": {
						"type": "string",
						"description": "ID"
					},
					"name": {
						"type": "string",
						"description": "Name"
					},
					"accountId": {
						"type": "string",
						"description": "Account ID"
					},
					"customerId": {
						"type": "string",
						"description": "Customer ID"
					},
					"priceBreakdown": {
						"type": "number",
						"format": "double",
						"description": "Price Breakdown"
					},
					"products": {
						"items": {
							"properties": {
								"units": {
									"type": "number",
									"format": "double",
									"description": "Product accumulated unit"
								},
								"price": {
									"type": "number",
									"format": "double",
									"description": "Product calculated price"
								},
								"id": {
									"type": "string",
									"description": "Product ID"
								}
							},
							"required": [
								"units",
								"price",
								"id"
							],
							"type": "object"
						},
						"type": "array",
						"description": "Products"
					},
					"billingPeriod": {
						"properties": {
							"endTime": {
								"type": "string",
								"format": "date",
								"description": "Period End Date"
							},
							"startTime": {
								"type": "string",
								"format": "date",
								"description": "Period Start Date"
							}
						},
						"required": [
							"endTime",
							"startTime"
						],
						"type": "object",
						"description": "Billing Period"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"accountId",
					"customerId",
					"priceBreakdown",
					"products",
					"billingPeriod",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CreateInvoicePayload": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Name"
					},
					"accountId": {
						"type": "string",
						"description": "Account ID"
					},
					"customerId": {
						"type": "string",
						"description": "Customer ID"
					},
					"priceBreakdown": {
						"type": "number",
						"format": "double",
						"description": "Price Breakdown"
					},
					"products": {
						"items": {
							"properties": {
								"units": {
									"type": "number",
									"format": "double",
									"description": "Product accumulated unit"
								},
								"price": {
									"type": "number",
									"format": "double",
									"description": "Product calculated price"
								},
								"id": {
									"type": "string",
									"description": "Product ID"
								}
							},
							"required": [
								"units",
								"price",
								"id"
							],
							"type": "object"
						},
						"type": "array",
						"description": "Products"
					},
					"billingPeriod": {
						"properties": {
							"endTime": {
								"type": "string",
								"format": "date-time",
								"description": "Period End Date"
							},
							"startTime": {
								"type": "string",
								"format": "date-time",
								"description": "Period Start Date"
							}
						},
						"required": [
							"endTime",
							"startTime"
						],
						"type": "object",
						"description": "Billing Period"
					}
				},
				"required": [
					"name",
					"accountId",
					"customerId",
					"priceBreakdown",
					"products",
					"billingPeriod"
				],
				"type": "object",
				"additionalProperties": true
			},
			"UpdateInvoicePayload": {
				"properties": {
					"name": {
						"type": "string",
						"description": "Name"
					},
					"customerId": {
						"type": "string",
						"description": "Account ID"
					},
					"products": {
						"items": {
							"properties": {
								"units": {
									"type": "number",
									"format": "double",
									"description": "Product accumulated unit"
								},
								"price": {
									"type": "number",
									"format": "double",
									"description": "Product calculated price"
								},
								"id": {
									"type": "string",
									"description": "Product ID"
								}
							},
							"required": [
								"units",
								"price",
								"id"
							],
							"type": "object"
						},
						"type": "array",
						"description": "Price Breakdown"
					},
					"billingPeriod": {
						"properties": {
							"endTime": {
								"type": "string",
								"format": "date-time",
								"description": "Period End Date"
							},
							"startTime": {
								"type": "string",
								"format": "date-time",
								"description": "Period Start Date"
							}
						},
						"required": [
							"endTime",
							"startTime"
						],
						"type": "object",
						"description": "Billing Period"
					},
					"priceBreakdown": {
						"type": "number",
						"format": "double",
						"description": "Price Breakdown"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"QueryResult_APIInvoice_": {
				"properties": {
					"items": {
						"items": {
							"$ref": "#/components/schemas/APIInvoice"
						},
						"type": "array",
						"description": "Items"
					},
					"totalCount": {
						"type": "integer",
						"format": "int32",
						"description": "Total items found"
					},
					"hasMore": {
						"type": "boolean",
						"description": "There are more items"
					}
				},
				"required": [
					"items",
					"totalCount",
					"hasMore"
				],
				"type": "object",
				"additionalProperties": true
			},
			"APIQueryPayload_APIInvoice_": {
				"properties": {
					"filter": {
						"properties": {},
						"type": "object",
						"description": "Filter by field.",
						"example": {
							"field": "A"
						}
					},
					"page": {
						"type": "integer",
						"format": "int32",
						"description": "Page",
						"example": 0,
						"default": 0,
						"minimum": 0
					},
					"pageSize": {
						"type": "integer",
						"format": "int32",
						"description": "Page Size",
						"example": 10,
						"default": 100,
						"minimum": 0
					},
					"sort": {
						"properties": {},
						"type": "object",
						"description": "Sort by field. Use 1 for ascending and -1 for descending.",
						"example": {
							"field": 1
						}
					}
				},
				"required": [
					"filter"
				],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "25k",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/invoices/{id}/Calculate": {
			"get": {
				"operationId": "Calculate Invoice",
				"responses": {
					"200": {
						"description": "Invoice total calculated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIInvoice"
								}
							}
						}
					},
					"404": {
						"description": "Invoice Products not found"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/invoices/{id}": {
			"get": {
				"operationId": "Get Invoice",
				"responses": {
					"200": {
						"description": "Invoice found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIInvoice"
								}
							}
						}
					},
					"404": {
						"description": "Invoice not found"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Update Invoice",
				"responses": {
					"200": {
						"description": "Invoice updated",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIInvoice"
								}
							}
						}
					},
					"400": {
						"description": "Invalid payload"
					},
					"404": {
						"description": "Invoice not found"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateInvoicePayload"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Delete Invoice",
				"responses": {
					"204": {
						"description": "Invoice deleted"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/invoices": {
			"post": {
				"operationId": "Create Invoice",
				"responses": {
					"201": {
						"description": "Invoice created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/APIInvoice"
								}
							}
						}
					},
					"400": {
						"description": "Invalid payload"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateInvoicePayload"
							}
						}
					}
				}
			}
		},
		"/invoices/query": {
			"post": {
				"operationId": "Query Invoices",
				"responses": {
					"200": {
						"description": "Invoices found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/QueryResult_APIInvoice_"
								}
							}
						}
					},
					"400": {
						"description": "Invalid query"
					}
				},
				"tags": [
					"Invoices"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/APIQueryPayload_APIInvoice_"
							}
						}
					}
				}
			}
		},
		"/health": {
			"get": {
				"operationId": "Health",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}